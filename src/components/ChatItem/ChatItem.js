import React from 'react';
import moment from 'moment'

import { Link } from 'react-router-dom';
import CSSModules from 'react-css-modules';
import styles from './styles.css';
import Glyphicon from 'react-bootstrap/lib/Glyphicon'
import {withRouter} from "react-router-dom";

let hash = require('object-hash');

const ChatItem = (props) => {

  if (typeof props.room !== "undefined") {
    // if the room was autogenerated (i.e. a natural 2-person chat)
    // then don't show it unless we specifically ask it to (i.e. passing the chat flag in)
    if (props.room.autogenerated && !props.chat) return null;

    // same if it's a group
    if (props.room.autogenerated && props.group) return null;

    // if we specifically ask for the chat, and it's not autogenerated
    // then we need to set the name for it ourselves 
    if (props.chat && props.room.autogenerated) {
      for (let i = 0; i < props.users.length; i++) {
        if (props.users[i]._id !== localStorage.getItem('id') && props.room.users.includes(props.users[i]._id)) {
          props.room.name = props.users[i].username;
          break;
        }
      }
    }

    return (
      <Link to={
        {
          pathname: "/chat/" + props.room._id,
          query: { users: props.room.users, room: props.room }
        }
      }>
        <div styleName='chat-item'>
          <img styleName='profile-image' src={props.room.image ? props.room.image : 'https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png' } />
          {props.room.name}
        </div>
      </Link>
    );
  } else {
    return (
      <Link to={
        {
          pathname: "/chat/" + hash([localStorage.getItem('id'), props.user._id].sort()),
          query: { users: [props.user._id], user: props.user }
        }
      }>
        <div styleName='chat-item'>
          <img styleName='profile-image' src={props.user.image ? props.user.image : 'https://upload.wikimedia.org/wikipedia/commons/8/89/Portrait_Placeholder.png' } />
          {props.user.username}
        </div>
      </Link>
    );
  }
        
}

export default withRouter(CSSModules(ChatItem, styles));
 